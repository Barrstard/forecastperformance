name: Build and Deploy to Unraid

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        pnpm install --frozen-lockfile
        echo "Dependencies installed successfully"

    - name: Generate Prisma client
      run: |
        echo "Generating Prisma client..."
        npx prisma generate
        echo "Prisma client generated successfully"

    - name: Build application
      env:
        SKIP_ENV_VALIDATION: true
      run: |
        echo "Building application..."
        pnpm run build
        echo "Application built successfully"

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Create deployment artifact
      if: github.event_name != 'pull_request'
      run: |
        mkdir deployment
        cp docker-compose.unraid.yml deployment/
        cp .env.unraid.template deployment/
        tar -czf deployment.tar.gz deployment/

    - name: Upload deployment artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: unraid-deployment
        path: deployment.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download deployment artifact
      uses: actions/download-artifact@v4
      with:
        name: unraid-deployment

    - name: Deployment complete
      run: echo "Docker image built and pushed successfully!"